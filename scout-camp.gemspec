# Generated by juwelier
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Juwelier::Tasks in Rakefile, and run 'rake gemspec'
# -*- encoding: utf-8 -*-
# stub: scout-camp 0.1.10 ruby lib

Gem::Specification.new do |s|
  s.name = "scout-camp".freeze
  s.version = "0.1.10".freeze

  s.required_rubygems_version = Gem::Requirement.new(">= 0".freeze) if s.respond_to? :required_rubygems_version=
  s.require_paths = ["lib".freeze]
  s.authors = ["Miguel Vazquez".freeze]
  s.date = "2025-04-16"
  s.description = "Functionalities to deploy and use scouts in remote servers like AWS".freeze
  s.email = "mikisvaz@gmail.com".freeze
  s.executables = ["scout-camp".freeze]
  s.extra_rdoc_files = [
    "LICENSE",
    "README.md"
  ]
  s.files = [
    ".vimproject",
    "LICENSE",
    "README.md",
    "Rakefile",
    "VERSION",
    "bin/scout-camp",
    "lib/scout-camp.rb",
    "lib/scout/aws/s3.rb",
    "lib/scout/offsite.rb",
    "lib/scout/offsite/exceptions.rb",
    "lib/scout/offsite/resource.rb",
    "lib/scout/offsite/ssh.rb",
    "lib/scout/offsite/step.rb",
    "lib/scout/offsite/sync.rb",
    "lib/scout/terraform_dsl.rb",
    "lib/scout/terraform_dsl/deployment.rb",
    "lib/scout/terraform_dsl/util.rb",
    "scout-camp.gemspec",
    "scout_commands/offsite",
    "scout_commands/sync",
    "scout_commands/terraform/add/lambda",
    "scout_commands/terraform/add/relay",
    "scout_commands/terraform/apply",
    "scout_commands/terraform/destroy",
    "scout_commands/terraform/lambda_task",
    "scout_commands/terraform/list",
    "scout_commands/terraform/outputs",
    "scout_commands/terraform/plan",
    "scout_commands/terraform/remove",
    "scout_commands/terraform/status",
    "scout_commands/terraform/task",
    "share/aws/lambda_function.rb",
    "share/terraform/aws/bucket/main.tf",
    "share/terraform/aws/bucket/output.tf",
    "share/terraform/aws/bucket/variables.tf",
    "share/terraform/aws/cluster/main.tf",
    "share/terraform/aws/cluster/output.tf",
    "share/terraform/aws/cluster/variables.tf",
    "share/terraform/aws/container_lambda/data.tf",
    "share/terraform/aws/container_lambda/locals.tf",
    "share/terraform/aws/container_lambda/main.tf",
    "share/terraform/aws/container_lambda/variables.tf",
    "share/terraform/aws/efs/data.tf",
    "share/terraform/aws/efs/locals.tf",
    "share/terraform/aws/efs/main.tf",
    "share/terraform/aws/efs/output.tf",
    "share/terraform/aws/efs/variables.tf",
    "share/terraform/aws/efs_host/data.tf",
    "share/terraform/aws/efs_host/locals.tf",
    "share/terraform/aws/efs_host/main.tf",
    "share/terraform/aws/efs_host/output.tf",
    "share/terraform/aws/efs_host/variables.tf",
    "share/terraform/aws/fargate/locals.tf",
    "share/terraform/aws/fargate/main.tf",
    "share/terraform/aws/fargate/variables.tf",
    "share/terraform/aws/host/locals.tf",
    "share/terraform/aws/host/main.tf",
    "share/terraform/aws/host/output.tf",
    "share/terraform/aws/host/variables.tf",
    "share/terraform/aws/iam_instance_profile/main.tf",
    "share/terraform/aws/iam_instance_profile/output.tf",
    "share/terraform/aws/iam_instance_profile/variables.tf",
    "share/terraform/aws/lambda/main.tf",
    "share/terraform/aws/lambda/variables.tf",
    "share/terraform/aws/network/data.tf",
    "share/terraform/aws/network/main.tf",
    "share/terraform/aws/network/output.tf",
    "share/terraform/aws/network/variables.tf",
    "share/terraform/aws/policy/main.tf",
    "share/terraform/aws/policy/output.tf",
    "share/terraform/aws/policy/variables.tf",
    "share/terraform/aws/policy_attachment/main.tf",
    "share/terraform/aws/policy_attachment/variables.tf",
    "share/terraform/aws/provider/data.tf",
    "share/terraform/aws/provider/output.tf",
    "share/terraform/aws/role/main.tf",
    "share/terraform/aws/role/output.tf",
    "share/terraform/aws/role/variables.tf",
    "share/terraform/aws/role_policy/main.tf",
    "share/terraform/aws/role_policy/variables.tf",
    "share/terraform/ssh/cmd/main.tf",
    "share/terraform/ssh/cmd/variables.tf",
    "test/scout/aws/test_s3.rb",
    "test/scout/offsite/test_resource.rb",
    "test/scout/offsite/test_ssh.rb",
    "test/scout/offsite/test_step.rb",
    "test/scout/offsite/test_sync.rb",
    "test/scout/test_terraform_dsl.rb",
    "test/test_helper.rb"
  ]
  s.homepage = "http://github.com/mikisvaz/scout-camp".freeze
  s.licenses = ["MIT".freeze]
  s.rubygems_version = "3.6.6".freeze
  s.summary = "Deploy you scouts".freeze

  s.specification_version = 4

  s.add_runtime_dependency(%q<scout-essentials>.freeze, [">= 0".freeze])
end

